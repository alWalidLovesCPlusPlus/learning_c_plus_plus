1. givne an integer, find the sum of the digits
2. given p,q find p^q using recursion
3. print an array by recursion
4. given an array print the maximum value
5. given an array print the sum of the array
6. remove all occurence of 'a' from 'aabcar'
7. check a integer is palindrome or not
8. given a number n, print to n without using loop
9. given a number and k, print k multiples of the number
10. given a n, print the sum to the nth term as like 1-2+3-4 = -2
11. print GCD and LCM
12. given a number n, print is it armstrong or not. example : 
    if n = 2; 1^3 + 2^3 = 9
    ans is "NO"
13. there are N stones, for each (1<=i<=N), height of the stone 'i' is
    'hi'. There is a frog who is initially on stone 1.
    He will repeat the following action some number of 
    times to reach stone N

    if the frog is curretly on stone 'i'. to jump to stone |i+1|
    or |i+2| . here a cost of |hi-hj| is incurred, where the j is the 
    stone to land on.

    find the total minimum possible total cost 
    incurred before the from reaches the stone N

    input : n = 4
    array = {10,30,40,20};
    ans : 30
14. check if 'x' exists in a array or not
15. print the sum of all subsets of an array
16. print all the possible paths in m*n grid
17. print all the subsequence of an string
18. given a string containing only digits from 
2-9 inclusive, return all the possible combinations that
the number could present 